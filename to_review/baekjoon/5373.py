cube = {
    0 : [['w'] * 3] * 3,
    1 : [['r'] * 3] * 3,
    2 : [['y'] * 3] * 3,
    3 : [['o'] * 3] * 3,
    4 : [['g'] * 3] * 3,
    5 : [['b'] * 3] * 3,
}

move_info = {
    "U":{"m":((),((0,0),(0,1),(0,2)),(),((0,0),(0,1),(0,2)),((0,0),(0,1),(0,2)),((0,0),(0,1),(0,2))),
         "+": (1,5,3,4),
        "-" : (1,4,3,5)
         },
    "D":{"m":((),((2,0),(2,1),(2,2)),(),((2,0),(2,1),(2,2)),((2,0),(2,1),(2,2)),((2,0),(2,1),(2,2))),
         "+": (1,4,3,5),
        "-" : (1,5,3,4)
    },
    "F": {"m":(((2,0),(2,1),(2,2)), (),((2,2), (2,1), (2,0)),(),((2,2),(1,2),(1,2)),((0,0), (1,0), (2,0))), #done
         "-": (0,5,2,4),
        "+" : (0,4,2,5)
          },
    "B": {"m":(((0,0),(0,1),(0,2)), (), ((0,0),(0,1),(0,2)),(),((2,0),(1,0),(0,0)),((2,0),(2,1),(2,2))), #done
         "-": (0,5,2,4),
        "+" : (0,4,2,5)
          },
    "L":{"m":(((0,0),(1,0),(2,0)), ((0,0), (1,0),(2,0)), ((2,0),(1,0),(0,0)), ((2,0),(1,0),(0,0)), (), ()), #done
         "-": (0,1,2,3),
        "+" : (0,3,2,1)
    },
    "R":{"m":(((0,2),(1,2),(2,2)), ((0,2), (1,2), (2,2)),((2,2), (1,2), (0,2)),((2,2), (1,2), (0,2)),(),()), #done
         "+": (0,3,2,1),
        "-" : (0,1,2,3)
    }
}
def main(i,j):
    s0,s1,s2,s3 = move_info[i][j]
    move_idxes = move_info[i]["m"] #해당 위치에서 돌게 될 경우 바뀌어야하는 인덱스

    for k in range(3):
        print(s0, s1,s2,s3,move_idxes[s1][k][0], move_idxes[s1][k][1])
        cube[s1][move_idxes[s1][k][0]][move_idxes[s1][k][1]], cube[s2][move_idxes[s2][k][0]][move_idxes[s2][k][1]] , \
        cube[s3][move_idxes[s3][k][0]][move_idxes[s3][k][1]], cube[s0][move_idxes[s0][k][0]][move_idxes[s0][k][1]]  \
            = cube[s0][move_idxes[s0][k][0]][move_idxes[s0][k][1]], cube[s1][move_idxes[s1][k][0]][move_idxes[s1][k][1]],\
        cube[s2][move_idxes[s2][k][0]][move_idxes[s2][k][1]],cube[s3][move_idxes[s3][k][0]][move_idxes[s3][k][1]]

t = int(input())
for i in range(t):
    n = int(input().strip())
    a = input().split()
    for j in range(n):
        main(a[j][0], a[j][1])
    for k in range(3):
        print(''.join(cube[0][k]))






